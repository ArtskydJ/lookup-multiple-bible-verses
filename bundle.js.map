{"version":3,"file":"bundle.js","sources":["src/node_modules/flatmap/index.js","src/node_modules/regex-fun/regex-source.js","src/node_modules/regex-fun/is-atomic.js","src/node_modules/regex-fun/index.js","src/js/books-of-the-bible.js","src/node_modules/verse-reference-regex/create-chapter-verse-range-regex.js","src/node_modules/verse-reference-regex/create-regex.js","src/node_modules/verse-reference-regex/extract-range-from-match.js","src/js/extract_ranges_from_text.js","src/js/canonapiv1.js","src/js/fetch_bible_passage_from_range.js","src/js/app.js"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function(arr, iter, context) {\n  var results = [];\n  if (!Array.isArray(arr)) return results;\n  arr.forEach(function(value, index, list) {\n    var res = iter.call(context, value, index, list);\n    if (Array.isArray(res)) {\n      results.push.apply(results, res);\n    } else if (res != null) {\n      results.push(res);\n    }\n  });\n  return results;\n};","module.exports = regex => regex instanceof RegExp ? regex.source : regex\n","const regexSource = require(`./regex-source.js`)\n\nconst closingCharacters = {\n\t'(': `)`,\n\t'[': `]`,\n}\n\nmodule.exports = function isAtomic(regex) {\n\tconst string = regexSource(regex)\n\n\treturn /^\\w$/.test(string) || enclosedByTopLevelCharacters(string)\n}\n\nfunction enclosedByTopLevelCharacters(string) {\n\tconst openingCharacter = string[0]\n\tconst closingCharacter = closingCharacters[openingCharacter]\n\n\n\tconst closedByAppropriateCharacter = closingCharacter !== undefined\n\t\t&& string[string.length - 1] === closingCharacter\n\n\n\tif (!closedByAppropriateCharacter) {\n\t\treturn false\n\t}\n\n\treturn !isClosedBeforeEndOfString(string, openingCharacter, closingCharacter)\n}\n\n\nfunction isClosedBeforeEndOfString(string, openingCharacter, closingCharacter) {\n\tlet depth = 0\n\n\tfor (let characterIndex = 0; characterIndex < string.length - 1; ++characterIndex) {\n\t\tdepth = calculateNewDepth(depth, openingCharacter, closingCharacter, string[characterIndex])\n\t\tif (depth === 0) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n}\n\nfunction calculateNewDepth(previousDepth, openingCharacter, closingCharacter, character) {\n\tif (character === openingCharacter) {\n\t\treturn previousDepth + 1\n\t} else if (character === closingCharacter) {\n\t\treturn previousDepth - 1\n\t} else {\n\t\treturn previousDepth\n\t}\n}\n","const isAtomic = require(`./is-atomic.js`)\nconst regexSource = require(`./regex-source.js`)\n\nconst combine = returnsRegex((...args) => escapeInputForCombining(...args).join(``))\nconst guaranteeAtomic = regex => isAtomic(regex) ? regex : `(?:${regexSource(regex)})`\nconst escapeRegex = str => str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, `\\\\$&`)\nconst ifRegex = (input, ifCase, elseIfCase) => input instanceof RegExp ? ifCase(input) : elseIfCase(input)\nconst escapeInputAndReturnString = regex => ifRegex(regex, regex => regex.source, escapeRegex)\n\nmodule.exports = {\n\tcombine,\n\teither: makeJoiningFunction(`(?:`, `|`, `)`),\n\tcapture: makeJoiningFunction(`(`, ``, `)`),\n\n\tflags: (flags, ...args) => new RegExp(combine(...args).source, flags),\n\n\tanyNumber: suffix(`*`),\n\toneOrMore: suffix(`+`),\n\toptional: suffix(`?`),\n\texactly: (n, ...regexes) => suffix(`{${n}}`)(...regexes),\n\tatLeast: (n, ...regexes) => suffix(`{${n},}`)(...regexes),\n\tbetween: (n, m, ...regexes) => suffix(`{${n},${m}}`)(...regexes),\n\n\tanyNumberNonGreedy: suffix(`*?`),\n\toneOrMoreNonGreedy: suffix(`+?`),\n\toptionalNonGreedy: suffix(`??`),\n\texactlyNonGreedy: (n, ...regexes) => suffix(`{${n}}?`)(...regexes),\n\tatLeastNonGreedy: (n, ...regexes) => suffix(`{${n},}?`)(...regexes),\n\tbetweenNonGreedy: (n, m, ...regexes) => suffix(`{${n},${m}}?`)(...regexes),\n}\n\nfunction removeNonCapturingGroupIfExists(regexString) {\n\tconst match = /^\\(\\?:(.+)\\)$/.exec(regexString)\n\treturn match ? match[1] : regexString\n}\n\nfunction guaranteeNoTopLevelOrs(regexString) {\n\treturn regexString.indexOf(`|`) >= 0 ? guaranteeAtomic(regexString) : regexString\n}\n\nfunction escapeInputForCombining(...args) {\n\treturn args.map(escapeInputAndReturnString).map(guaranteeNoTopLevelOrs)\n}\n\nfunction returnsRegex(fn) {\n\treturn (...args) => ifRegex(fn(...args), regex => regex, input => new RegExp(input))\n}\n\nfunction makeJoiningFunction(openingCharacter, joinCharacter, closingCharacter) {\n\treturn returnsRegex((...args) => {\n\t\tconst naiveBody = escapeInputForCombining(...args).join(joinCharacter)\n\t\tconst body = isAtomic(naiveBody) ? removeNonCapturingGroupIfExists(naiveBody) : naiveBody\n\n\t\treturn concat(openingCharacter, body, closingCharacter)\n\t})\n}\n\nfunction suffix(appendCharacter) {\n\treturn returnsRegex((...args) => concat(guaranteeAtomic(combine(...args)), appendCharacter))\n}\n\nfunction concat(...regexes) {\n\treturn regexes.map(regexSource).join(``)\n}\n","module.exports = [\r\n\t{\r\n\t\t\"name\": \"Genesis\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Gn\",\r\n\t\t\t\"Gen\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Exodus\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Exod\",\r\n\t\t\t\"Ex\",\r\n\t\t\t\"Exo\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Leviticus\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Lv\",\r\n\t\t\t\"Lev\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Numbers\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Nu\",\r\n\t\t\t\"Num\",\r\n\t\t\t\"Numb\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Deuteronomy\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Dt\",\r\n\t\t\t\"Deut\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Joshua\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Josh\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Judges\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Judg\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Ruth\",\r\n\t\t\"aliases\": []\r\n\t},\r\n\t{\r\n\t\t\"name\": \"1 Samuel\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"1 Sm\",\r\n\t\t\t\"1 Sam\",\r\n\t\t\t\"1st Sam\",\r\n\t\t\t\"1st Samuel\",\r\n\t\t\t\"First Samuel\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"2 Samuel\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"2 Sm\",\r\n\t\t\t\"2 Sam\",\r\n\t\t\t\"2nd Sam\",\r\n\t\t\t\"2nd Samuel\",\r\n\t\t\t\"Second Samuel\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"1 Kings\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"1 Ki\",\r\n\t\t\t\"1 Kgs\",\r\n\t\t\t\"1st Kgs\",\r\n\t\t\t\"1st Kings\",\r\n\t\t\t\"First Kings\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"2 Kings\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"2 Ki\",\r\n\t\t\t\"2 Kgs\",\r\n\t\t\t\"2nd Kgs\",\r\n\t\t\t\"2nd Kings\",\r\n\t\t\t\"Second Kings\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"1 Chronicles\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"1 Ch\",\r\n\t\t\t\"1 Chr\",\r\n\t\t\t\"1st Chr\",\r\n\t\t\t\"1st Chronicles\",\r\n\t\t\t\"First Chronicles\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"2 Chronicles\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"2 Ch\",\r\n\t\t\t\"2 Chr\",\r\n\t\t\t\"2nd Chr\",\r\n\t\t\t\"2nd Chronicles\",\r\n\t\t\t\"Second Chronicles\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Ezra\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ezr\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Nehemiah\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ne\",\r\n\t\t\t\"Neh\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Esther\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Esth\",\r\n\t\t\t\"Est\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Job\",\r\n\t\t\"aliases\": []\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Psalms\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ps\",\r\n\t\t\t\"Pss\",\r\n\t\t\t\"Psalm\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Proverbs\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Prov\",\r\n\t\t\t\"Pr\",\r\n\t\t\t\"Pro\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Ecclesiastes\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Eccl\",\r\n\t\t\t\"Ec\",\r\n\t\t\t\"Ecc\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Song of Solomon\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Song\",\r\n\t\t\t\"Song of Songs\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Isaiah\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Is\",\r\n\t\t\t\"Isa\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Jeremiah\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Jer\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Lamentations\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Lam\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Ezekiel\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ezk\",\r\n\t\t\t\"Ezek\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Daniel\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Dn\",\r\n\t\t\t\"Dan\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Hosea\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ho\",\r\n\t\t\t\"Hos\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Joel\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Jl\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Amos\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Am\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Obadiah\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Obad\",\r\n\t\t\t\"Ob\",\r\n\t\t\t\"Oba\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Jonah\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Jon\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Micah\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Mc\",\r\n\t\t\t\"Mi\",\r\n\t\t\t\"Mic\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Nahum\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Nah\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Habakkuk\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Hab\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Zephaniah\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Zp\",\r\n\t\t\t\"Zeph\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Haggai\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Hg\",\r\n\t\t\t\"Hag\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Zechariah\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Zc\",\r\n\t\t\t\"Zech\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Malachi\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Mal\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Matthew\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Mt\",\r\n\t\t\t\"Matt\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Mark\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Mk\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Luke\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Lk\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"John\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Jn\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Acts\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ac\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Romans\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ro\",\r\n\t\t\t\"Rm\",\r\n\t\t\t\"Rom\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"1 Corinthians\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"1 Cor\",\r\n\t\t\t\"1st Cor\",\r\n\t\t\t\"1st Corinthians\",\r\n\t\t\t\"First Corinthians\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"2 Corinthians\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"2 Cor\",\r\n\t\t\t\"2nd Cor\",\r\n\t\t\t\"2nd Corinthians\",\r\n\t\t\t\"Second Corinthians\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Galatians\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Gal\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Ephesians\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Eph\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Philippians\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ph\",\r\n\t\t\t\"Phil\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Colossians\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Col\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"1 Thessalonians\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"1 Th\",\r\n\t\t\t\"1 Thess\",\r\n\t\t\t\"1st Thess\",\r\n\t\t\t\"1st Thessalonians\",\r\n\t\t\t\"First Thessalonians\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"2 Thessalonians\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"2 Th\",\r\n\t\t\t\"2 Thess\",\r\n\t\t\t\"2nd Thess\",\r\n\t\t\t\"2nd Thessalonians\",\r\n\t\t\t\"Second Thessalonians\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"1 Timothy\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"1 Tim\",\r\n\t\t\t\"1st Tim\",\r\n\t\t\t\"1st Timothy\",\r\n\t\t\t\"First Timothy\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"2 Timothy\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"2 Tim\",\r\n\t\t\t\"2nd Tim\",\r\n\t\t\t\"2nd Timothy\",\r\n\t\t\t\"Second Timothy\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Titus\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Tit\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Philemon\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Phlm\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Hebrews\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Heb\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"James\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Ja\",\r\n\t\t\t\"Jas\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"1 Peter\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"1 Pt\",\r\n\t\t\t\"1 Pet\",\r\n\t\t\t\"1st Pet\",\r\n\t\t\t\"1st Peter\",\r\n\t\t\t\"First Peter\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"2 Peter\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"2 Pt\",\r\n\t\t\t\"2 Pet\",\r\n\t\t\t\"2nd Pet\",\r\n\t\t\t\"2nd Peter\",\r\n\t\t\t\"Second Peter\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"1 John\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"1 Jn\",\r\n\t\t\t\"1st John\",\r\n\t\t\t\"First John\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"2 John\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"2 Jn\",\r\n\t\t\t\"2nd John\",\r\n\t\t\t\"Second John\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"3 John\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"3 Jn\",\r\n\t\t\t\"3rd John\",\r\n\t\t\t\"Third John\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Jude\",\r\n\t\t\"aliases\": []\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Revelation\",\r\n\t\t\"aliases\": [\r\n\t\t\t\"Rv\",\r\n\t\t\t\"Rev\"\r\n\t\t]\r\n\t}\r\n]\r\n","const {\n\tcombine,\n\tflags,\n\teither,\n\toptional,\n} = require('regex-fun')\n\nmodule.exports = function createChapterVerseRangeRegex({\n\trequireVerse = false,\n\tflags: regexFlags = 'i',\n} = {}) {\n\tconst number = /(\\d+)/\n\tconst numberAndOptionalLetter = /(\\d+)([a-z])?/\n\tconst colonVerse = combine(':', numberAndOptionalLetter)\n\tconst chapterAndVerse = combine(number, requireVerse ? colonVerse : optional(colonVerse))\n\n\tconst secondHalfOfRange = combine('-', either(/([a-z])/, /(\\d+)([a-z])/, chapterAndVerse, numberAndOptionalLetter))\n\n\treturn flags(regexFlags, chapterAndVerse, optional(secondHalfOfRange))\n}\n","const flatmap = require('flatmap')\nconst {\n\teither,\n\tcapture,\n\tflags,\n} = require('regex-fun')\n\nconst canonBooks = require('books-of-the-bible')\n\nconst chapterVerseRange = require('./create-chapter-verse-range-regex.js')\n\nmodule.exports = function createRegex({\n\trequireVerse = false,\n\tflags: regexFlags = 'i',\n\tbooks = canonBooks,\n} = {}) {\n\tconst bookNames = books.map(({ name }) => name)\n\tconst abbreviations = flatmap(books, ({ aliases }) => {\n\t\treturn flatmap(aliases, alias => [ alias, alias + '.' ])\n\t})\n\n\tconst range = chapterVerseRange({ requireVerse, flags: regexFlags })\n\n\treturn flags(\n\t\tregexFlags,\n\t\tcapture(either(...bookNames, ...abbreviations)),\n\t\t' ',\n\t\trange\n\t)\n}\n\n","const canonBooks = require('books-of-the-bible')\n\nconst mapOfAliasesToCanonBookNames = makeMapOfAliases(canonBooks)\n\nconst valueOr = (value, defaultValue) => value === undefined\n\t? evaluate(defaultValue)\n\t: value\nconst ifelse = (predicate, truthyCase, falsyCase) => evaluate(predicate)\n\t? evaluate(truthyCase)\n\t: evaluate(falsyCase)\n\nconst valueOrNull = value => valueOr(value, null)\nconst evaluate = value => typeof value === 'function' ? value() : value\nconst int = value => value === null ? value : parseInt(value, 10)\nconst stripPeriod = str => str[str.length - 1] === '.' ? str.substr(0, str.length - 1) : str\nconst isSection = str => /[a-z]/.test(str)\n\n\nmodule.exports = extractRangeFromMatch\n\nfunction extractRangeFromMatch(match, books) {\n\tconst mapOfAliasesToBookNames = books ? makeMapOfAliases(books) : mapOfAliasesToCanonBookNames\n\tconst [ , matchBook, matchStartChapter, matchStartVerse, matchStartSection, ...matchTail ] = match\n\tconst rangeEndValues = matchTail.filter(value => value !== undefined)\n\n\tconst start = {\n\t\tchapter: int(valueOrNull(matchStartChapter)),\n\t\tverse: int(valueOrNull(matchStartVerse)),\n\t\tsection: valueOrNull(matchStartSection),\n\t}\n\n\tconst end = ifelse(rangeEndValues.length === 3, () => {\n\t\tconst [ chapter, verse, section ] = rangeEndValues\n\t\treturn {\n\t\t\tchapter: int(chapter),\n\t\t\tverse: int(verse),\n\t\t\tsection: valueOrNull(section),\n\t\t}\n\t}, () => {\n\t\tconst { numbers, section } = separateSectionFromNumbers(rangeEndValues)\n\n\t\tif (numbers.length === 2) {\n\t\t\tconst [ chapter, verse ] = numbers\n\t\t\treturn {\n\t\t\t\tchapter,\n\t\t\t\tverse,\n\t\t\t\tsection,\n\t\t\t}\n\t\t} else if (numbers.length === 1) {\n\t\t\tconst rangeIsChapter = start.verse === null\n\n\t\t\treturn rangeIsChapter ? {\n\t\t\t\tchapter: numbers[0],\n\t\t\t\tverse: null,\n\t\t\t\tsection,\n\t\t\t} : {\n\t\t\t\tchapter: start.chapter,\n\t\t\t\tverse: numbers[0],\n\t\t\t\tsection,\n\t\t\t}\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tchapter: start.chapter,\n\t\t\t\tverse: start.verse,\n\t\t\t\tsection: section || start.section,\n\t\t\t}\n\t\t}\n\t})\n\n\treturn {\n\t\tbook: mapOfAliasesToBookNames[stripPeriod(matchBook).toLowerCase()].name,\n\t\tstart,\n\t\tend,\n\t}\n}\n\nmodule.exports.chapterVerseRange = match => {\n\tconst [ , ...rest ] = match\n\tconst books = [{\n\t\tname: '',\n\t\taliases: [],\n\t}]\n\treturn Object.assign(\n\t\textractRangeFromMatch([ null, '', ...rest ], books),\n\t\t{ book: null }\n\t)\n}\n\n\nfunction separateSectionFromNumbers(ary) {\n\tconst lastValue = ary[ary.length - 1]\n\n\tif (ary.length > 0 && isSection(lastValue)) {\n\t\treturn {\n\t\t\tnumbers: ary.slice(0, ary.length - 1).map(int),\n\t\t\tsection: lastValue,\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tnumbers: ary.map(int),\n\t\t\tsection: null,\n\t\t}\n\t}\n}\n\nfunction makeMapOfAliases(books) {\n\treturn books.reduce((map, book) => {\n\t\tmap[book.name.toLowerCase()] = book\n\t\tbook.aliases.forEach(alias => map[alias.toLowerCase()] = book)\n\t\treturn map\n\t}, Object.create(null))\n}\n","import { createRegex, extractRangeFromMatch } from 'verse-reference-regex'\r\n\r\nconst cvr_all = createRegex({ flags: 'gi' })\r\n\r\nexport default function extract_references_from_text(text) {\r\n\tconst matches = [ ...text.matchAll(cvr_all) ]\r\n\r\n\tconst ranges = matches.map(match => extractRangeFromMatch(match))\r\n\r\n\tranges.forEach(range => {\r\n\t\tconst { start, end } = range\r\n\r\n\t\tif (end.chapter < start.chapter) {\r\n\t\t\tthrow new Error('invalid chapter range')\r\n\t\t}\r\n\r\n\t\tif (end.chapter === start.chapter && end.verse < start.verse) {\r\n\t\t\tthrow new Error('invalid verse range')\r\n\t\t}\r\n\r\n\t\tconsole.log(JSON.stringify(range))\r\n\t})\r\n\r\n\treturn ranges\r\n}\r\n","import books from 'books-of-the-bible'\r\n\r\nconst cache_clearing_handled = fetch('https://www.canonapi.com/v1/last_update.json')\r\n\t.then(res => res.text())\r\n\t.then(last_update => {\r\n\t\tconst cached_version = localStorage.getItem('last_update')\r\n\t\tif (cached_version !== last_update) {\r\n\t\t\tlocalStorage.clear()\r\n\t\t\tlocalStorage.setItem('last_update', last_update)\r\n\t\t\t// console.log('cleared cache')\r\n\t\t} else {\r\n\t\t\t// console.log('keeping cache')\r\n\t\t}\r\n\t})\r\n\r\nfunction normalize(book) {\r\n\treturn book.toLowerCase().replace(/ /g, '').trim()\r\n}\r\n\r\nfunction fetch_cached(book, chapter) {\r\n\tconst normalized_book = normalize(book)\r\n\tconst valid_book = books.find(({ name, aliases }) => [ name, ...aliases ].map(normalize).includes(normalized_book))\r\n\tconst book_name = valid_book && valid_book.name\r\n\r\n\treturn cache_clearing_handled.then(() => {\r\n\t\tif (book_name) {\r\n\t\t\tconst key = normalize(book_name) + chapter\r\n\t\t\tconst cached = localStorage.getItem(key)\r\n\t\t\tif (cached) {\r\n\t\t\t\treturn Promise.resolve({ // THESE SHOULD MATCH\r\n\t\t\t\t\tverses: JSON.parse(cached),\r\n\t\t\t\t\tbook_name,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn fetch(`https://www.canonapi.com/v1/${ normalize(book_name) }/${ chapter }.json`)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tif (! res.ok) {\r\n\t\t\t\t\t\tthrow new Error(`Invalid chapter: ${ book_name } ${ chapter }`)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn res.text()\r\n\t\t\t\t})\r\n\t\t\t\t.then(text => {\r\n\t\t\t\t\tlocalStorage.setItem(key, text)\r\n\t\t\t\t\treturn { // THESE SHOULD MATCH\r\n\t\t\t\t\t\tverses: JSON.parse(text),\r\n\t\t\t\t\t\tbook_name,\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t\treturn Promise.reject(new Error(`Invalid book: ${ book }`))\r\n\t})\r\n}\r\n\r\nexport default fetch_cached\r\n","import canonapiv1 from './canonapiv1.js'\n\nfunction number_range(start, end) {\n\tif (end < start) {\n\t\tthrow new RangeError('start must be less than end')\n\t}\n\treturn new Array(end - start + 1).fill().map((_, i) => start + i)\n}\n\nexport default async function fetch_bible_passage_from_range(range) {\n\tconst { book, start, end } = range\n\n\tconst chapter_numbers = number_range(start.chapter, end.chapter)\n\n\tconst chapters_text = await Promise.all(\n\t\tchapter_numbers.map(async chapter_number => {\n\t\t\tconst { verses } = await canonapiv1(book, chapter_number)\n\n\t\t\tlet slice_start = 0\n\t\t\tif (start.chapter === chapter_number && start.verse) {\n\t\t\t\tslice_start = start.verse - 1\n\t\t\t}\n\t\t\tlet slice_end = Infinity\n\t\t\tif (end.chapter === chapter_number && end.verse) {\n\t\t\t\tslice_end = end.verse\n\t\t\t}\n\n\t\t\tif (verses.length <= slice_start) {\n\t\t\t\tthrow new Error(`Invalid verse: ${ book } ${ chapter_number }:${ slice_start + 1 }`)\n\t\t\t}\n\n\t\t\tif (verses.length < slice_end && slice_end !== Infinity) {\n\t\t\t\tconst prefix = slice_end > verses.length + 1 ? verses.length + 1 + '-' : ''\n\t\t\t\tthrow new Error(`Invalid verse${ prefix ? 's' : '' }: ${ book } ${ chapter_number }:${ prefix }${ slice_end }`)\n\t\t\t}\n\n\t\t\tconst text = verses.slice(slice_start, slice_end).join('')\n\n\t\t\treturn text\n\t\t}),\n\t)\n\n\tlet reference = book + ' ' + start.chapter\n\tif (start.verse) {\n\t\treference += ':' + start.verse\n\t}\n\tif (start.chapter !== end.chapter) {\n\t\treference += '-' + end.chapter\n\t\tif (end.verse) {\n\t\t\treference += ':' + end.verse\n\t\t}\n\t} else if (end.verse && end.verse !== start.verse) {\n\t\treference += '-' + end.verse\n\t}\n\n\treturn {\n\t\treference,\n\t\ttext: chapters_text.join(''),\n\t}\n}\n","import extract_ranges_from_text from './extract_ranges_from_text.js'\r\nimport fetch_bible_passage_from_range from './fetch_bible_passage_from_range.js'\r\n\r\nconst textarea = document.querySelector('textarea')\r\nconst output = document.querySelector('div.output')\r\n\r\nfunction decode_hash_fragment(hash) {\r\n\tconst hash_fragment = decodeURIComponent(hash.slice(1))\r\n\treturn hash_fragment\r\n\t\t.replace(/\\./g, ':')\r\n\t\t.replace(/_/g, ` `)\r\n} \r\n\r\nfunction encode_hash_fragment(bible_passages) {\r\n\tconst hash_content = bible_passages\r\n\t\t.filter(({ error }) => !error)\r\n\t\t.map(({ reference }) => reference\r\n\t\t\t.replace(/:/g, '.')\r\n\t\t\t.replace(/ /g, '_')\r\n\t\t)\r\n\t\t.join('_')\r\n\r\n\treturn '#' + encodeURIComponent(hash_content)\r\n}\r\n\r\nasync function refresh() {\r\n\tconst text = textarea.value\r\n\r\n\tconst ranges = extract_ranges_from_text(text)\r\n\r\n\tconst bible_passages = await Promise.all(\r\n\t\tranges.map(async range => {\r\n\t\t\ttry {\r\n\t\t\t\tconst { reference, text } = await fetch_bible_passage_from_range(range)\r\n\t\t\t\treturn { error: null, reference, text}\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn { error }\r\n\t\t\t}\r\n\t\t})\r\n\t)\r\n\r\n\tconst passage_html = bible_passages.map(({ error, reference, text }) => error\r\n\t\t? `<span class=\"err\">${ error.message }</span>`\r\n\t\t: `<span class=\"verse\"><span class=\"ref\">${ reference }</span>${ text }</span>`\r\n\t).join('')\r\n\r\n\toutput.innerHTML = passage_html\r\n\r\n\tdocument.location.hash = encode_hash_fragment(bible_passages)\r\n}\r\n \r\nif (document.location.hash) {\r\n\ttextarea.value = decode_hash_fragment(document.location.hash)\r\n}\r\n\r\ntextarea.oninput = refresh\r\n\r\nrefresh()\r\n"],"names":["regexSource","regex","RegExp","source","require$$0","closingCharacters","calculateNewDepth","previousDepth","openingCharacter","closingCharacter","character","isAtomic","string","test","undefined","length","depth","characterIndex","isClosedBeforeEndOfString","enclosedByTopLevelCharacters","require$$1","combine","returnsRegex","args","escapeInputForCombining","join","guaranteeAtomic","escapeRegex","str","replace","ifRegex","input","ifCase","elseIfCase","escapeInputAndReturnString","regexFun","either","makeJoiningFunction","capture","flags","anyNumber","suffix","oneOrMore","optional","exactly","n","regexes","atLeast","between","m","anyNumberNonGreedy","oneOrMoreNonGreedy","optionalNonGreedy","exactlyNonGreedy","atLeastNonGreedy","betweenNonGreedy","guaranteeNoTopLevelOrs","regexString","indexOf","map","fn","joinCharacter","naiveBody","body","match","exec","removeNonCapturingGroupIfExists","concat","appendCharacter","booksOfTheBible","name","aliases","flatmap","arr","iter","context","results","Array","isArray","forEach","value","index","list","res","call","push","apply","canonBooks","require$$2","chapterVerseRange","requireVerse","regexFlags","numberAndOptionalLetter","colonVerse","chapterAndVerse","secondHalfOfRange","mapOfAliasesToCanonBookNames","makeMapOfAliases","valueOrNull","defaultValue","evaluate","valueOr","int","parseInt","extractRangeFromMatch","books","mapOfAliasesToBookNames","matchBook","matchStartChapter","matchStartVerse","matchStartSection","matchTail","rangeEndValues","filter","start","chapter","verse","section","end","predicate","truthyCase","falsyCase","numbers","ary","lastValue","slice","separateSectionFromNumbers","book","substr","toLowerCase","reduce","alias","Object","create","extractRangeFromMatch$1","exports","extractRangeFromMatch_1","rest","assign","cvr_all","bookNames","abbreviations","range","createRegex","cache_clearing_handled","fetch","then","text","last_update","localStorage","getItem","clear","setItem","normalize","trim","async","fetch_bible_passage_from_range","chapter_numbers","RangeError","fill","_","i","number_range","chapters_text","Promise","all","verses","normalized_book","valid_book","find","includes","book_name","key","cached","resolve","JSON","parse","ok","Error","reject","canonapiv1","chapter_number","slice_start","slice_end","Infinity","prefix","reference","textarea","document","querySelector","output","refresh","ranges","matchAll","console","log","stringify","extract_ranges_from_text","bible_passages","error","passage_html","message","innerHTML","location","hash","hash_content","encodeURIComponent","encode_hash_fragment","decodeURIComponent","oninput"],"mappings":"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"}